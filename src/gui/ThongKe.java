/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package gui;

import connectdb.ConnectDB;
import dao.SanPham_DAO;
import dao.ThongKe_DAO;
import entity.SanPham;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.ValueAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import java.awt.*;
import java.awt.font.TextAttribute;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.AttributedString;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Thien Long
 */
public final class ThongKe extends javax.swing.JPanel {

    private ChartPanel soLuongChartPanel;
    private ChartPanel doanhThuChartPanel;
    ThongKe_DAO thongKe_DAO = new ThongKe_DAO();
    private DefaultTableModel model_dsSanPham;
    /**
     * Creates new form ThongKe
     */
    public ThongKe() {
        String columnNames[] = {"Mã sản phẩm", "Tên sản phẩm", "Số lượng bán", "Doanh thu"};
        model_dsSanPham = new DefaultTableModel(columnNames, 0);

        initComponents();

        doanhThuChartPanel = new ChartPanel(createBarChart(LocalDate.now().getYear()));
        soLuongChartPanel = new ChartPanel(createBarChart1(LocalDate.now().getMonthValue(), LocalDate.now().getYear()));
        doanhThuChartPanel.setPreferredSize(chart_SanPham.getPreferredSize());
        soLuongChartPanel.setPreferredSize(chart_SanPham.getPreferredSize());
        chart_DoanhThu.add(doanhThuChartPanel);
        chart_SanPham.add(soLuongChartPanel);
        renderListToTable(jMonth_thang.getMonth(), jYear_nam.getYear());
        
        jMonth_thang.addPropertyChangeListener(new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if (evt.getPropertyName().equals("month")) {
                    int month = jMonth_thang.getMonth();
                    int year = jYear_nam.getYear();
                    renderListToTable(month, year);
                    chart_SanPham.updateUI();
                    soLuongChartPanel.setChart(createBarChart1(month + 1, year));
                    chart_SanPham.add(soLuongChartPanel);
                }
            }
        });

        jYear_nam.addPropertyChangeListener(new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if (evt.getPropertyName().equals("year")) {
                    int year = jYear_nam.getYear();
                    int month = jMonth_thang.getMonth();

                    renderListToTable(month, year);
                    chart_SanPham.updateUI();
                    soLuongChartPanel.setChart(createBarChart1(month + 1, year));
                    chart_SanPham.add(soLuongChartPanel);
                }
            }
        });

        jYear_nam1.addPropertyChangeListener(new PropertyChangeListener() {
            @Override
            public void propertyChange(PropertyChangeEvent evt) {
                if (evt.getPropertyName().equals("year")) {
                    int year1 = jYear_nam1.getYear();
                    chart_DoanhThu.updateUI();
                    doanhThuChartPanel.setChart(createBarChart(year1));
                    chart_DoanhThu.add(doanhThuChartPanel);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        thongke_tabPane = new javax.swing.JTabbedPane();
        soLuong_tab = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jMonth_thang = new com.toedter.calendar.JMonthChooser();
        jYear_nam = new com.toedter.calendar.JYearChooser();
        pnl_topItem = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_sanPham = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        chart_SanPham = new javax.swing.JPanel();
        filler2 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 32767));
        doanhThu_tab = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jYear_nam1 = new com.toedter.calendar.JYearChooser();
        chart_DoanhThu = new javax.swing.JPanel();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 0), new java.awt.Dimension(0, 20), new java.awt.Dimension(0, 32767));

        setPreferredSize(new java.awt.Dimension(1000, 700));
        setLayout(new java.awt.BorderLayout());

        soLuong_tab.setBackground(new java.awt.Color(0, 153, 153));
        soLuong_tab.setLayout(new java.awt.BorderLayout());

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Thống Kê Theo:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Tháng");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("Năm");

        jMonth_thang.setBackground(new java.awt.Color(255, 255, 255));
        jMonth_thang.setMaximumSize(new java.awt.Dimension(300, 40));
        jMonth_thang.setMinimumSize(new java.awt.Dimension(100, 27));
        jMonth_thang.setPreferredSize(new java.awt.Dimension(150, 27));
        jMonth_thang.setLocale(new Locale("vi","VN"));
        jMonth_thang.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jMonth_thangPropertyChange(evt);
            }
        });

        jYear_nam.setMaximumSize(new java.awt.Dimension(120, 40));
        jYear_nam.setMinimumSize(new java.awt.Dimension(120, 23));
        jYear_nam.setPreferredSize(new java.awt.Dimension(120, 23));

        pnl_topItem.setBackground(new java.awt.Color(255, 255, 255));
        pnl_topItem.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Top 5 sản phẩm có số lượng bán cao nhất trong tháng : ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14), new java.awt.Color(0, 153, 102))); // NOI18N
        pnl_topItem.setLayout(new javax.swing.BoxLayout(pnl_topItem, javax.swing.BoxLayout.Y_AXIS));

        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        tbl_sanPham.setFont(new java.awt.Font("Helvetica Neue", 0, 16)); // NOI18N
        tbl_sanPham.setModel(model_dsSanPham
        );
        tbl_sanPham.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        tbl_sanPham.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbl_sanPham.setFocusable(false);
        tbl_sanPham.setRowSelectionAllowed(false);
        tbl_sanPham.setShowGrid(true);
        tbl_sanPham.setSurrendersFocusOnKeystroke(true);
        jScrollPane1.setViewportView(tbl_sanPham);

        pnl_topItem.add(jScrollPane1);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setText("Lược Đồ Dữ Liệu");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jMonth_thang, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jYear_nam, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel4)
                    .addComponent(pnl_topItem, javax.swing.GroupLayout.PREFERRED_SIZE, 1009, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(7, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1)))
                            .addComponent(jYear_nam, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jMonth_thang, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel3)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnl_topItem, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel4))
        );

        soLuong_tab.add(jPanel1, java.awt.BorderLayout.NORTH);

        chart_SanPham.setBackground(new java.awt.Color(255, 255, 255));
        chart_SanPham.setPreferredSize(new java.awt.Dimension(1036, 400));
        chart_SanPham.setLayout(new java.awt.BorderLayout());
        chart_SanPham.add(filler2, java.awt.BorderLayout.CENTER);

        soLuong_tab.add(chart_SanPham, java.awt.BorderLayout.CENTER);

        thongke_tabPane.addTab("Thống Kê Theo Sản Phẩm", soLuong_tab);

        doanhThu_tab.setBackground(new java.awt.Color(0, 153, 153));
        doanhThu_tab.setLayout(new java.awt.BorderLayout());

        jPanel2.setBackground(new java.awt.Color(0, 153, 153));

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel5.setText("Thống Kê Theo:");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("Năm");

        jYear_nam1.setMaximumSize(new java.awt.Dimension(120, 40));
        jYear_nam1.setMinimumSize(new java.awt.Dimension(120, 23));
        jYear_nam1.setPreferredSize(new java.awt.Dimension(120, 23));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(jYear_nam1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(702, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jYear_nam1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        doanhThu_tab.add(jPanel2, java.awt.BorderLayout.NORTH);

        chart_DoanhThu.setBackground(new java.awt.Color(255, 255, 255));
        chart_DoanhThu.setPreferredSize(new java.awt.Dimension(0, 20));
        chart_DoanhThu.setLayout(new java.awt.BorderLayout());
        chart_DoanhThu.add(filler1, java.awt.BorderLayout.CENTER);

        doanhThu_tab.add(chart_DoanhThu, java.awt.BorderLayout.CENTER);

        thongke_tabPane.addTab("Thống Kê Theo Doanh Thu", doanhThu_tab);

        add(thongke_tabPane, java.awt.BorderLayout.PAGE_START);
    }// </editor-fold>//GEN-END:initComponents

    private void jMonth_thangPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jMonth_thangPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_jMonth_thangPropertyChange


    // Chart Thong Ke Theo Doanh Thu 12 Thang
    public DefaultCategoryDataset createDataset(int year) {

        DefaultCategoryDataset dataset = new DefaultCategoryDataset();

        double[] total = thongKe_DAO.getDoanhThu12ThangTheoNam(year);
        for(int i=0;i<12;i++){
            dataset.addValue(total[i] / 1000000, "Doanh thu", Integer.toString(i + 1));
        }
        return dataset;
    }

    public DefaultCategoryDataset createDataset1(int month, int year) {
        DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        try {
            PreparedStatement st = ConnectDB.connection.prepareStatement("""
                                                                   select top 5 ct.MaSP, TenSP,sum(Soluong) as sl, SUM(soluong * GiaNhap*(1- chietKhau)) as total
                                                                   from CT_HoaDon as ct join HoaDon as hd on ct.MaHD = hd.MaHD
                                                                           join SanPham as sp on ct.MaSP = sp.MaSP
                                                                   where MONTH(ngayLapHD) = ? and Year(NgayLapHD) = ?
                                                                   group by ct.MaSP, TenSP
                                                                   order by SUM(SoLuong*GiaNhap*(1-chietKhau)) desc
                                                                   """);
            st.setInt(1, month);
            st.setInt(2, year);
            ResultSet rs = st.executeQuery();

            while (rs.next()) {
                dataset.addValue(rs.getDouble(4)/1000000, "Tổng doanh thu", rs.getString(2));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        return dataset;
    }

    public JFreeChart createBarChart(int year) {
        JFreeChart barChart = ChartFactory.createBarChart(
                "Doanh Thu 12 Tháng".toUpperCase(),
                "THÁNG",
                "DOANH THU(TRIỆU VND)",
                createDataset(year),
                PlotOrientation.VERTICAL, true, true, false);
        barChart.getTitle().setPaint(Color.RED);

        barChart.getPlot().setBackgroundPaint(Color.WHITE);
        BarRenderer renderer = (BarRenderer) barChart.getCategoryPlot().getRenderer();

        CategoryPlot plot = barChart.getCategoryPlot();
        // Lấy đối tượng CategoryAxis và ValueAxis từ CategoryPlot
        CategoryAxis domainAxis = plot.getDomainAxis();
        ValueAxis rangeAxis = plot.getRangeAxis();

        // set cho trục x
        Font xlabelFont = new Font("Helvetica Neue", Font.BOLD, 14);
        Color xLabelColor = new Color(65, 165, 238);
        AttributedString xLabel = new AttributedString("THÁNG");
        xLabel.addAttribute(TextAttribute.FONT, xlabelFont);
        xLabel.addAttribute(TextAttribute.FOREGROUND, xLabelColor);
        domainAxis.setAttributedLabel(xLabel);

        // set cho trục y
        Font yLabelFont = new Font("Segoe UI", Font.BOLD, 14);
        Color yLabelColor = new Color(65,165,238);
        AttributedString yLabel = new AttributedString("DOANH THU (triệu đồng)");
        yLabel.addAttribute(TextAttribute.FONT, yLabelFont);
        yLabel.addAttribute(TextAttribute.FOREGROUND, yLabelColor);
        rangeAxis.setAttributedLabel(yLabel);

        Color color = new Color(65,165,238);
        for(int i=0;i<12;i++){
            renderer.setSeriesPaint(i, color);
        }

        return barChart;
    }

    public JFreeChart createBarChart1(int month, int year) {
        JFreeChart barChart = ChartFactory.createBarChart(
                "Tổng Doanh Thu Từng Sản Phẩm Theo Tháng".toUpperCase(),
                "Tháng", "Tổng doanh thu", createDataset1(month,year),
                PlotOrientation.VERTICAL, true, true, false);

        barChart.getTitle().setPaint(new Color(65,165,238));


        barChart.getPlot().setBackgroundPaint(new Color(250,250,250));
        BarRenderer renderer = (BarRenderer) barChart.getCategoryPlot().getRenderer();

        CategoryPlot plot = barChart.getCategoryPlot();
        // Lấy đối tượng CategoryAxis và ValueAxis từ CategoryPlot
        CategoryAxis domainAxis = plot.getDomainAxis();
        ValueAxis rangeAxis = plot.getRangeAxis();

        // Set màu cho title trục x
        Font xLabelFont = new Font("Segoe UI", Font.BOLD, 14);
        Color xLabelColor = new Color(65,165,238);
        AttributedString xLabel = new AttributedString("TÊN SẢN PHẨM");
        xLabel.addAttribute(TextAttribute.FONT, xLabelFont);
        xLabel.addAttribute(TextAttribute.FOREGROUND, xLabelColor);
        domainAxis.setAttributedLabel(xLabel);

        // Set màu cho title trục y
        Font yLabelFont = new Font("Segoe UI", Font.BOLD, 14);
        Color yLabelColor = new Color(65,165,238);
        AttributedString yLabel = new AttributedString("TỔNG DOANH THU TRONG THÁNG (triệu đồng)");
        yLabel.addAttribute(TextAttribute.FONT, yLabelFont);
        yLabel.addAttribute(TextAttribute.FOREGROUND, yLabelColor);
        rangeAxis.setAttributedLabel(yLabel);

        Color color = new Color(65,165,238);
        for(int i=0;i<12;i++){
            renderer.setSeriesPaint(i, color);
        }

        return barChart;

    }

    public void renderListToTable(ArrayList<SanPham> list)  {
        model_dsSanPham.setRowCount(0);
        for (SanPham sp : list) {
            model_dsSanPham.addRow(new Object[]{sp.getMaSP(), sp.getTenSP(), thongKe_DAO.getSoLuongBanSanPham(sp.getMaSP()), thongKe_DAO.getDoanhThuSanPham(sp.getMaSP())});
        }
    }

    public void renderListToTable(int month, int year) {
        month = jMonth_thang.getMonth() + 1;
        year = jYear_nam.getYear();
        model_dsSanPham.setRowCount(0);
        try {
            PreparedStatement st = ConnectDB.connection.prepareStatement("""
                                                                   select top 5 ct.MaSP, TenSP,sum(Soluong) as sl, SUM(soluong * GiaNhap*(1- chietKhau)) as total
                                                                   from CT_HoaDon as ct join HoaDon as hd on ct.MaHD = hd.MaHD
                                                                           join SanPham as sp on ct.MaSP = sp.MaSP
                                                                   where MONTH(ngayLapHD) = ? and Year(NgayLapHD) = ?
                                                                   group by ct.MaSP, TenSP
                                                                   order by SUM(SoLuong*GiaNhap*(1-chietKhau)) desc
                                                                   """);
            st.setInt(1, month);
            st.setInt(2, year);
            ResultSet rs = st.executeQuery();

            while (rs.next()) {
                model_dsSanPham.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getInt(3), rs.getDouble(4)});
        
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel chart_DoanhThu;
    private javax.swing.JPanel chart_SanPham;
    private javax.swing.JPanel doanhThu_tab;
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private com.toedter.calendar.JMonthChooser jMonth_thang;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JYearChooser jYear_nam;
    private com.toedter.calendar.JYearChooser jYear_nam1;
    private javax.swing.JPanel pnl_topItem;
    private javax.swing.JPanel soLuong_tab;
    private javax.swing.JTable tbl_sanPham;
    private javax.swing.JTabbedPane thongke_tabPane;
    // End of variables declaration//GEN-END:variables

    public static void main(String[] args) {
        new ThongKe().setVisible(true);
    }
}
